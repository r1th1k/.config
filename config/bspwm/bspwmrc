#! /bin/sh

#pgrep -x sxhkd > /dev/null || sxhkd &
dunst &
feh --bg-scale /home/rithik/Pictures/hd2.jpg &
/home/rithik/.config/polybar/launch.sh 2>/dev/null

bspc monitor -d 1 2 3 4 5

bspc config border_width         2
bspc config window_gap           12

bspc config split_ratio          0.52
bspc config borderless_monocle   true
bspc config gapless_monocle      true

#### BSPWM configuration ####
#bspc config border_radius                 8
bspc config border_width                  2
bspc config window_gap                    10
bspc config top_padding                   20
bspc config bottom_padding                0
bspc config left_padding                  0
bspc config right_padding                 0
bspc config single_monocle                false
bspc config click_to_focus                true
bspc config split_ratio                   0.50
bspc config borderless_monocle            true
bspc config gapless_monocle               true
bspc config focus_by_distance             true
bspc config focus_follows_pointer         true
bspc config history_aware_focus           true
bspc config remove_disabled_monitors      true
bspc config merge_overlapping_monitors    true
bspc config pointer_modifier mod4
bspc config pointer_action1 move
bspc config pointer_action2 resize_side
bspc config pointer_action3 resize_corner

#### BSPWM coloring ####
bspc config normal_border_color		      "#0E0F0F"
bspc config active_border_color	          "#1e1e1e"
bspc config focused_border_color	      "#12484E"
bspc config presel_feedback_color	      "#12484E"
bspc config urgent_border_color 	      "#dd2727"



#polybar script start
HideBar() {
  polybar-msg cmd hide
}

ShowBar() {
  polybar-msg cmd show
}

HideNodes() {
  for node in $1; do
    bspc node "$node" -g hidden=on
  done
}

HideTiled() {
  Nodes=$(bspc query -N -n .tiled -d "$1")
  HideNodes "$Nodes"
}

ShowNodes() {
  Nodes=$(bspc query -N -n .hidden -d "$1")

  for node in $Nodes; do
    bspc node "$node" -g hidden=off
  done
}

bspc subscribe node_state | while read -r Event Monitor Desktop Node State Active
do
  PrimaryMonitor=$(bspc query -M -m primary)
  # Hide bar and nodes when node becomes fullscreen, otherwise show
  if [ "$State" = "fullscreen" ] && [ "$Active" = "on" ]; then
    # Only consider nodes on primary monitor
    if [ "$PrimaryMonitor" = "$Monitor" ]; then
      HideBar
    fi
      HideTiled "$Desktop"
  else
    if [ "$PrimaryMonitor" = "$Monitor" ]; then
      ShowBar
    fi
    ShowNodes "$Desktop"
  fi
done &

bspc subscribe node_remove | while read Event Monitor Desktop Node
do
  PrimaryMonitor="$(bspc query -M -m primary)"

  # Show bar if no nodes are fullscreen on current desktop
  if [ "$Monitor" = "$PrimaryMonitor" ] && \
    [ -z "$(bspc query -N -n .fullscreen -d "$Desktop")" ]; then
    ShowBar
  fi
  ShowNodes "$Desktop"
done &

bspc subscribe node_transfer | while read -r Event SrcMonitor SrcDesktop SrcNode DestMonitor Dest Desktop DestNode
do
  # Show nodes on src desktop and hide nodes on dest desktop
  # If src node is in full screen mode
  if [ -n "$(bspc query -N -n "$SrcNode".fullscreen)" ]; then
    ShowNodes "$SrcDesktop"
    HideTiled "$DestDesktop"
    ShowBar
  fi

  # Hide any fullscreen nodes on destination desktop
  FullscreenDest=$(bspc query -N -n .fullscreen -d "$DestDesktop" \
    | sed "/$SrcNode/d")
  if [ -n "$FullscreenDest" ]; then
    HideNodes "$FullscreenDest"
  fi
done &

bspc subscribe desktop_focus | while read -r Event Monitor Desktop
do
  PrimaryMonitor="$(bspc query -M -m primary)"
  FullscreenNode="$(bspc query -N -n .fullscreen -d "$Desktop")"

  # Only consider nodes on primary monitor
  if [ "$PrimaryMonitor" = "$Monitor" ]; then
    # Hide bar if desktop contains fullscreen node
    if [ -n "$FullscreenNode" ]; then
      HideBar
    # Otherwise show the bar
    else
      ShowBar
    fi
  fi
done &
#polybar script end

#rules
#bspc rule -a Gimp desktop=^8 follow=on state=floating
bspc rule -a Chromium desktop=^2
bspc rule -a mplayer2 state=floating
bspc rule -a Kupfer.py focus=on
bspc rule -a Screenkey manage=off
bspc rule -a VirtualBox desktop=^8 follow=on state=floating